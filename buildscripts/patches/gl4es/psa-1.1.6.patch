From 18f1ee1722ab282acfa2f6d913af85ed93a36138 Mon Sep 17 00:00:00 2001
From: Dmitry <docent27@ukr.net>
Date: Sat, 31 Jul 2021 09:51:39 +0300
Subject: [PATCH] PSA

---
 src/gl/hint.c     | 7 ++++++-
 src/gl/init.c     | 6 ++++--
 src/glx/hardext.c | 2 +-
 3 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/src/gl/hint.c b/src/gl/hint.c
index feef2e3..be4414d 100644
--- a/src/gl/hint.c
+++ b/src/gl/hint.c
@@ -11,6 +11,11 @@ void pandora_set_gamma();
 #endif
 
 void APIENTRY_GL4ES gl4es_glHint(GLenum pname, GLenum mode) {
+
+if(pname == 41231){
+    fpe_writePSA();
+    return;
+}
     
     FLUSH_BEGINEND;
 
@@ -132,4 +137,4 @@ void APIENTRY_GL4ES gl4es_glHint(GLenum pname, GLenum mode) {
             gles_glHint(pname, mode);
     }
 }
-AliasExport(void,glHint,,(GLenum pname, GLenum mode));
\ No newline at end of file
+AliasExport(void,glHint,,(GLenum pname, GLenum mode));
diff --git a/src/gl/init.c b/src/gl/init.c
index ca5d9c5..38a43cf 100644
--- a/src/gl/init.c
+++ b/src/gl/init.c
@@ -668,18 +668,20 @@ void initialize_gl4es() {
         env(LIBGL_NOPSA, globals4es.nopsa, "Don't use PrecompiledShaderArchive");
         if(globals4es.nopsa==0) {
             cwd[0]='\0';
-            // TODO: What to do on ANDROID and EMSCRIPTEN?
+/*            // TODO: What to do on ANDROID and EMSCRIPTEN?
 #ifdef __linux__
             const char* home = GetEnvVar("HOME");
             if(home)
                 strcpy(cwd, home);
             if(cwd[strlen(cwd)]!='/')
                 strcat(cwd, "/");
 #elif defined AMIGAOS4
             strcpy(cwd, "PROGDIR:");
-#endif
+#endif*/
+	strcpy(cwd, "/storage/emulated/0/omw/");
             if(strlen(cwd)) {
                 strcat(cwd, ".gl4es.psa");
+                SHUT_LOGD("Shader archive file: %s\n", cwd);
                 fpe_InitPSA(cwd);
                 fpe_readPSA();
             }
diff --git a/src/glx/hardext.c b/src/glx/hardext.c
index 65c11f1..1d74748 100644
--- a/src/glx/hardext.c
+++ b/src/glx/hardext.c
@@ -357,7 +357,7 @@ void GetHardwareExtensions(int notest)
         gles_glGetIntegerv(GL_MAX_VERTEX_ATTRIBS, &hardext.maxvattrib);
         SHUT_LOGD("Max vertex attrib: %d\n", hardext.maxvattrib);
         S("GL_OES_standard_derivatives ", derivatives, 1);
-        S("GL_OES_get_program ", prgbinary, 1);
+        S("GL_OES_get_program_binary ", prgbinary, 1);
         if(hardext.prgbinary) {
             gles_glGetIntegerv(GL_NUM_PROGRAM_BINARY_FORMATS_OES, &hardext.prgbin_n);
             SHUT_LOGD("Number of supported Program Binary Format: %d\n", hardext.prgbin_n);
--
libgit2 0.28.4

